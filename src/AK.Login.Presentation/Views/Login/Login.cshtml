@*******************************************************************************************************************************
 * AK.Login.Presentation.Views.Login.Login
 * Copyright © 2014 Aashish Koirala <http://aashishkoirala.github.io>
 * 
 * This file is part of AK-Login.
 *  
 * AK-Login is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * AK-Login is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with AK-Login.  If not, see <http://www.gnu.org/licenses/>.
 * 
 *******************************************************************************************************************************@

@* ReSharper disable Html.PathError *@
@model AK.Login.Presentation.LoginViewModel
@{ Layout = "Common.cshtml"; }

<div class="container visible-md visible-lg large-top-padding">
    <div class="row">
        <div class="col-md-2"></div>
        <div class="col-md-3">
            @Html.Raw(Model.Splash.TitleHtml)
            <br/><br/>
            <span class="small">
                Please sign in to continue.<br/>
                <a href="#" data-toggle="modal" data-target="#aboutLoginModal">Why am I at @(Model.Domain)?</a>
            </span>
            <br/><br/>
            <div class="pull-left">
                <div class="google-button" title="Sign in using your Google account">
                    <a class="google-icon" href="@Url.Action("Google")"></a>
                    <a class="google-text" href="@Url.Action("Google")">Log In</a>
                </div>
            </div>
            <div class="pull-left">&nbsp;&nbsp;&nbsp;</div>
            <div class="pull-left" title="Sign in using your Facebook account">
                <fb:login-button scope="public_profile,email" onlogin="checkLoginState()" data-size="large">
                </fb:login-button>
                <form name="facebook" action="facebook" method="post">
                    <input type="hidden" name="signedRequest" value=""/>
                    <input type="hidden" name="userId" value=""/>
                </form>
            </div>
            <div class="clearfix"></div>
            <br/>
            <a class="small" href="http://aashishkoirala.github.io">About the Author</a><br/>
            <a class="small" href="#" data-toggle="modal" data-target="#tosModal">Terms of Service</a><br/>
            <a class="small" href="#" data-toggle="modal" data-target="#privacyModal">Privacy</a>
        </div>
        <div class="col-md-7">
            <img src="@Model.Splash.BannerImageUrl" alt="@Model.Splash.ApplicationName"/>
            <br/><br/>
            @Html.Raw(Model.Splash.DescriptionHtml)
        </div>                
    </div>
</div>
<div class="container visible-xs visible-sm">
    <div class="row text-center">
        @Html.Raw(Model.Splash.TitleHtml)
        <br/><br/>
        <div class="row">
            <div class="col-xs-6">
                <div class="google-button pull-right" title="Sign in using your Google account">
                    <a class="google-icon" href="@Url.Action("Google")"></a>
                    <a class="google-text" href="@Url.Action("Google")">Log In</a>
                </div>        
            </div>
            <div class="col-xs-6">
                <div title="Sign in using your Facebook account" class="pull-left">
                    <fb:login-button scope="public_profile,email" onlogin="checkLoginState()" data-size="large">
                    </fb:login-button>
                    <form id="facebookForm" name="facebook" action="facebook" method="post">
                        <input id="facebookSignedRequest" type="hidden" name="signedRequest" value=""/>
                        <input id="facebookUserId" type="hidden" name="userId" value=""/>
                    </form>
                </div>
            </div>
        </div>
        <br/>
        <img src="@Model.Splash.BannerImageUrl" alt="@Model.Splash.ApplicationName"/>
        <br/><br/>                
        <div class="small-description-container">
            @Html.Raw(Model.Splash.DescriptionHtml)
        </div>
        <br/>
        <br/>
        <a class="small" href="http://aashishkoirala.github.io">About the Author</a>&nbsp;|
        <a class="small" href="#" data-toggle="modal" data-target="#tosModal">Terms of Service</a>&nbsp;|
        <a class="small" href="#" data-toggle="modal" data-target="#privacyModal">Privacy</a>
    </div>
</div>
<div class="modal fade" id="aboutLoginModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span>&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">About This Login Page</h4>
            </div>
            <div class="modal-body">
                This is the central login system that I use (or am in the process of migrating them to use) for all of my applications.
                Once you log in here, the idea is for you to be able to navigate to any of my applications without logging in again or
                having a separate user account.
                <br/><br/>
                Currently, sign-in through Google and Facebook are supported. Once you sign in, you will
                be redirected back to @Model.Splash.ApplicationName. If this is the first time you are signing in to @Model.Splash.ApplicationName,
                this application will ask you for a display name to use inside @Model.Splash.ApplicationName.
                <br/><br/>
                You can see the <a href="#" data-toggle="modal" data-target="#privacyModal">Privacy</a> section for any concerns you may have.
                Also make sure to check out the <a href="#" data-toggle="modal" data-target="#tosModal">Terms of Service</a>.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="tosModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span>&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Terms of Service</h4>
            </div>
            <div class="modal-body">
                <span class="small">
                    <i>
                        You will have to excuse the standoffish, hostile nature of the terms of service. But the truth is this is a freely
                        hosted showcase instance that one guy built and put up. While I greatly appreciate your use of and feedback on the
                        application, I need to make sure you know what you're getting into.
                    </i>    
                </span>
                <br/><br/>
                By logging in, you agree to the following terms of service for @Model.Splash.ApplicationName as well as the
                login system at @Model.Domain (referred to hereby as "this application"):
                <br/><br/>
                <ul>
                    <li>
                        The purpose of this instance is to showcase the application. I do use it personally, but if you plan to use it, do be aware that
                        this is a freely hosted development instance and can go down at any time- leading to loss of service as well as data.
                    </li>
                    <li>There may still be bugs in the system that may lead to undesired behavior.</li>
                    <li>
                        If the application or database hosting provider is hacked or similarly compromised, intruders may gain access to your data.
                        See <a href="#" data-toggle="modal" data-target="#privacyModal">Privacy</a> for details on how your data is stored.
                    </li>
                    <li>
                        The application is not hosted over SSL. That means the connection from your browser to the system is not encrypted.
                        Even though the authentication process uses industry standard protocols and signed messages, the connection itself is not encrypted.
                        Once you are authenticated, all your traffic within the application is not encrypted either.
                    </li>
                    <li>You are urged not to use the application to store critical or sensitive information.</li>
                    <li>
                        I, the author of this application, am not to be held responsible for any adverse thing that happens in your life because of
                        your using this application or because of any of the points mentioned above.
                    </li>
                </ul>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-sm btn-info" data-dismiss="modal">Done</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="privacyModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span>&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Privacy</h4>
            </div>
            <div class="modal-body">
                The application level data is stored in a database and is not encrypted. The security of the database system is relied upon
                for protection of the data. However, the only thing that links this data to the user, and the only piece of information that is
                stored by the application to identify the user is the user key. The user key is a SHA-256 hash of the user identifier, which
                is a random/unique alphanumeric value returned by Facebook (for Facebook login), or the user's Google account e-mail address
                (for Google login). Of course, if you have content within the application level data that can be used to identify you, that
                is not encrypted as mentioned above. This includes your display name - but remember that that does not have to be your real name.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<div id="fb-root"></div>
<div class="modal fade" id="ieWarningModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <h4>Looks like you're using Internet Explorer.</h4>
                While I know everything to generally work in IE, I have seen things not sit quite right in certain cases, especially during login, and especially with IE 11.
                Be forewarned.
                <br/><br/>
                <button type="button"  class="btn btn-sm btn-info" data-dismiss="modal">Okay, I have been warned.</button>
            </div>
        </div>
    </div>
</div>
@if (Model.ShowIeWarning)
{
    <script type="text/javascript">
        $(function () {
            $('#ieWarningModal').modal();
        });
    </script>
}
@* ReSharper restore Html.PathError *@
